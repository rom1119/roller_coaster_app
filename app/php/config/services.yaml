# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    redis_host: '%env(redis_host)%'
    redis_port: '%env(redis_port)%'
    redis_pass: '%env(redis_pass)%'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../Domain/Model/'
            - '../Model/'
            - '../src/Kernel.php'
        
    Symfony\Component\DependencyInjection\ContainerInterface: '@service_container'

    App\RedisMonitoring: 
        arguments:
            - '@App\RedisConnector'
            - '@App\Domain\DomainEventListener'
            - '%redis_host%'
            - '%redis_port%'
            - '%redis_pass%'

    App\RedisConnector:     
        arguments:
            - '%redis_host%'
            - '%redis_port%'
            - '%redis_pass%'
            - '%kernel.environment%'

    App\EventListener\ApiExceptionSubscriber:
        arguments: ['%kernel.debug%', '@logger']
        tags:
            - { name: kernel.event_subscriber }

    # this config only applies to the services created by this file
    _instanceof:
        # services whose classes are instances of CustomInterface will be tagged automatically
        App\Domain\DomainEventHandler:
            tags: ['domain.event_handler']
            
        App\Domain\CoasterWorkingConstraint:
            tags: ['domain.coaster_working_constraint']


    App\Domain\DomainEventListener:
        arguments:
        - !tagged 'domain.event_handler'
        
        
    App\Domain\ConstraintChecker:
        arguments:
        - !tagged 'domain.coaster_working_constraint'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
